# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import greenlake-data-services
from greenlake-data-services.api.storage_pools_api import StoragePoolsApi  # noqa: E501
from greenlake-data-services.rest import ApiException


class TestStoragePoolsApi(unittest.TestCase):
    """StoragePoolsApi unit test stubs"""

    def setUp(self):
        self.api = greenlake-data-services.api.storage_pools_api.StoragePoolsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_device_type1_storage_pool_get_by_id(self):
        """Test case for device_type1_storage_pool_get_by_id

        Get details of Primera / Alletra 9K storage-pool identified by {id}  # noqa: E501
        """
        pass

    def test_device_type1_storage_pool_list(self):
        """Test case for device_type1_storage_pool_list

        Get all storage-pools details by Primera / Alletra 9K  # noqa: E501
        """
        pass

    def test_device_type1_storage_pool_volume_get_by_id(self):
        """Test case for device_type1_storage_pool_volume_get_by_id

        Get all volumes for storage-pool identified by {uuid} of Primera / Alletra 9K  # noqa: E501
        """
        pass

    def test_device_type2_create_pool(self):
        """Test case for device_type2_create_pool

        Create storage pool from Nimble / Alletra 6K  system identified by {systemId}  # noqa: E501
        """
        pass

    def test_device_type2_edit_pool_detail_by_id(self):
        """Test case for device_type2_edit_pool_detail_by_id

        Edit details of Nimble / Alletra 6K pool identified by {storagePoolId}  # noqa: E501
        """
        pass

    def test_device_type2_get_all_pool_details(self):
        """Test case for device_type2_get_all_pool_details

        Get all pools details by Nimble / Alletra 6K  # noqa: E501
        """
        pass

    def test_device_type2_get_pool_capacity_history(self):
        """Test case for device_type2_get_pool_capacity_history

        Get storage pool capacity trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}  # noqa: E501
        """
        pass

    def test_device_type2_get_pool_detail_by_id(self):
        """Test case for device_type2_get_pool_detail_by_id

        Get details of Nimble / Alletra 6K pool identified by {storagePoolId}  # noqa: E501
        """
        pass

    def test_device_type2_get_pool_performance_history(self):
        """Test case for device_type2_get_pool_performance_history

        Get performance trend data of Nimble / Alletra 6K storage pool identified by {storagePoolId}  # noqa: E501
        """
        pass

    def test_device_type2_get_pool_performance_statistics(self):
        """Test case for device_type2_get_pool_performance_statistics

        Get performance statistics of Nimble / Alletra 6K storage pool identified by {storagePoolId}  # noqa: E501
        """
        pass

    def test_device_type2_merge_pool_by_id(self):
        """Test case for device_type2_merge_pool_by_id

        Merge pool identified by {storagePoolId} from Nimble / Alletra 6K  # noqa: E501
        """
        pass

    def test_device_type2_remove_pool_by_id(self):
        """Test case for device_type2_remove_pool_by_id

        Delete pool identified by {storagePoolId} from Nimble / Alletra 6K  # noqa: E501
        """
        pass

    def test_storage_pool_volumes_list(self):
        """Test case for storage_pool_volumes_list

        Get all volumes for storage-pool identified by {id}  # noqa: E501
        """
        pass

    def test_storage_pools_get_by_id(self):
        """Test case for storage_pools_get_by_id

        Get details of storage pools identified by {id}  # noqa: E501
        """
        pass

    def test_storage_pools_list(self):
        """Test case for storage_pools_list

        Get all storage pools for a device {systemId}  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
