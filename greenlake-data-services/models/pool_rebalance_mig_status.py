# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PoolRebalanceMigStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'array_data_migration_status': 'list[ArrayMigStatus]',
        'id': 'str',
        'name': 'str',
        'pool_avg_space_utilization': 'int'
    }

    attribute_map = {
        'array_data_migration_status': 'array_data_migration_status',
        'id': 'id',
        'name': 'name',
        'pool_avg_space_utilization': 'pool_avg_space_utilization'
    }

    def __init__(self, array_data_migration_status=None, id=None, name=None, pool_avg_space_utilization=None):  # noqa: E501
        """PoolRebalanceMigStatus - a model defined in OpenAPI"""  # noqa: E501

        self._array_data_migration_status = None
        self._id = None
        self._name = None
        self._pool_avg_space_utilization = None
        self.discriminator = None

        if array_data_migration_status is not None:
            self.array_data_migration_status = array_data_migration_status
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if pool_avg_space_utilization is not None:
            self.pool_avg_space_utilization = pool_avg_space_utilization

    @property
    def array_data_migration_status(self):
        """Gets the array_data_migration_status of this PoolRebalanceMigStatus.  # noqa: E501

        Data migration status for a list of arrays in the pool.  # noqa: E501

        :return: The array_data_migration_status of this PoolRebalanceMigStatus.  # noqa: E501
        :rtype: list[ArrayMigStatus]
        """
        return self._array_data_migration_status

    @array_data_migration_status.setter
    def array_data_migration_status(self, array_data_migration_status):
        """Sets the array_data_migration_status of this PoolRebalanceMigStatus.

        Data migration status for a list of arrays in the pool.  # noqa: E501

        :param array_data_migration_status: The array_data_migration_status of this PoolRebalanceMigStatus.  # noqa: E501
        :type: list[ArrayMigStatus]
        """

        self._array_data_migration_status = array_data_migration_status

    @property
    def id(self):
        """Gets the id of this PoolRebalanceMigStatus.  # noqa: E501

        Unique ID of the pool.  # noqa: E501

        :return: The id of this PoolRebalanceMigStatus.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PoolRebalanceMigStatus.

        Unique ID of the pool.  # noqa: E501

        :param id: The id of this PoolRebalanceMigStatus.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this PoolRebalanceMigStatus.  # noqa: E501

        Name of the Pool.  # noqa: E501

        :return: The name of this PoolRebalanceMigStatus.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PoolRebalanceMigStatus.

        Name of the Pool.  # noqa: E501

        :param name: The name of this PoolRebalanceMigStatus.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def pool_avg_space_utilization(self):
        """Gets the pool_avg_space_utilization of this PoolRebalanceMigStatus.  # noqa: E501

        Average space utilization for the arrays in the pool.  # noqa: E501

        :return: The pool_avg_space_utilization of this PoolRebalanceMigStatus.  # noqa: E501
        :rtype: int
        """
        return self._pool_avg_space_utilization

    @pool_avg_space_utilization.setter
    def pool_avg_space_utilization(self, pool_avg_space_utilization):
        """Sets the pool_avg_space_utilization of this PoolRebalanceMigStatus.

        Average space utilization for the arrays in the pool.  # noqa: E501

        :param pool_avg_space_utilization: The pool_avg_space_utilization of this PoolRebalanceMigStatus.  # noqa: E501
        :type: int
        """

        self._pool_avg_space_utilization = pool_avg_space_utilization

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PoolRebalanceMigStatus):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
