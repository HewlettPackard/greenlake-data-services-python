# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class EdDc4data(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'esi': 'bool',
        'esi_status': 'str',
        'system_led': 'LED'
    }

    attribute_map = {
        'esi': 'esi',
        'esi_status': 'esiStatus',
        'system_led': 'systemLED'
    }

    def __init__(self, esi=None, esi_status=None, system_led=None):  # noqa: E501
        """EdDc4data - a model defined in OpenAPI"""  # noqa: E501

        self._esi = None
        self._esi_status = None
        self._system_led = None
        self.discriminator = None

        if esi is not None:
            self.esi = esi
        if esi_status is not None:
            self.esi_status = esi_status
        if system_led is not None:
            self.system_led = system_led

    @property
    def esi(self):
        """Gets the esi of this EdDc4data.  # noqa: E501


        :return: The esi of this EdDc4data.  # noqa: E501
        :rtype: bool
        """
        return self._esi

    @esi.setter
    def esi(self, esi):
        """Sets the esi of this EdDc4data.


        :param esi: The esi of this EdDc4data.  # noqa: E501
        :type: bool
        """

        self._esi = esi

    @property
    def esi_status(self):
        """Gets the esi_status of this EdDc4data.  # noqa: E501


        :return: The esi_status of this EdDc4data.  # noqa: E501
        :rtype: str
        """
        return self._esi_status

    @esi_status.setter
    def esi_status(self, esi_status):
        """Sets the esi_status of this EdDc4data.


        :param esi_status: The esi_status of this EdDc4data.  # noqa: E501
        :type: str
        """

        self._esi_status = esi_status

    @property
    def system_led(self):
        """Gets the system_led of this EdDc4data.  # noqa: E501


        :return: The system_led of this EdDc4data.  # noqa: E501
        :rtype: LED
        """
        return self._system_led

    @system_led.setter
    def system_led(self, system_led):
        """Sets the system_led of this EdDc4data.


        :param system_led: The system_led of this EdDc4data.  # noqa: E501
        :type: LED
        """

        self._system_led = system_led

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EdDc4data):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
