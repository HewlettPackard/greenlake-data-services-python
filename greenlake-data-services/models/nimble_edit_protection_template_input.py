# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class NimbleEditProtectionTemplateInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'add_schedules': 'list[ProtectionScheduleInput]',
        'app_cluster_name': 'str',
        'app_id': 'str',
        'app_server': 'str',
        'app_service_name': 'str',
        'app_sync': 'str',
        'description': 'str',
        'edit_schedules': 'list[NimbleNsSchedule]',
        'name': 'str',
        'remove_schedules': 'list[ProtectionScheduleActionNimble]'
    }

    attribute_map = {
        'add_schedules': 'addSchedules',
        'app_cluster_name': 'app_cluster_name',
        'app_id': 'app_id',
        'app_server': 'app_server',
        'app_service_name': 'app_service_name',
        'app_sync': 'app_sync',
        'description': 'description',
        'edit_schedules': 'editSchedules',
        'name': 'name',
        'remove_schedules': 'removeSchedules'
    }

    def __init__(self, add_schedules=None, app_cluster_name=None, app_id=None, app_server=None, app_service_name=None, app_sync=None, description=None, edit_schedules=None, name=None, remove_schedules=None):  # noqa: E501
        """NimbleEditProtectionTemplateInput - a model defined in OpenAPI"""  # noqa: E501

        self._add_schedules = None
        self._app_cluster_name = None
        self._app_id = None
        self._app_server = None
        self._app_service_name = None
        self._app_sync = None
        self._description = None
        self._edit_schedules = None
        self._name = None
        self._remove_schedules = None
        self.discriminator = None

        if add_schedules is not None:
            self.add_schedules = add_schedules
        if app_cluster_name is not None:
            self.app_cluster_name = app_cluster_name
        if app_id is not None:
            self.app_id = app_id
        if app_server is not None:
            self.app_server = app_server
        if app_service_name is not None:
            self.app_service_name = app_service_name
        if app_sync is not None:
            self.app_sync = app_sync
        if description is not None:
            self.description = description
        if edit_schedules is not None:
            self.edit_schedules = edit_schedules
        if name is not None:
            self.name = name
        if remove_schedules is not None:
            self.remove_schedules = remove_schedules

    @property
    def add_schedules(self):
        """Gets the add_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501

        List of protection schedules to be added.  # noqa: E501

        :return: The add_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: list[ProtectionScheduleInput]
        """
        return self._add_schedules

    @add_schedules.setter
    def add_schedules(self, add_schedules):
        """Sets the add_schedules of this NimbleEditProtectionTemplateInput.

        List of protection schedules to be added.  # noqa: E501

        :param add_schedules: The add_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: list[ProtectionScheduleInput]
        """

        self._add_schedules = add_schedules

    @property
    def app_cluster_name(self):
        """Gets the app_cluster_name of this NimbleEditProtectionTemplateInput.  # noqa: E501

        If the application is running within a Windows cluster environment then this is the cluster name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :return: The app_cluster_name of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._app_cluster_name

    @app_cluster_name.setter
    def app_cluster_name(self, app_cluster_name):
        """Sets the app_cluster_name of this NimbleEditProtectionTemplateInput.

        If the application is running within a Windows cluster environment then this is the cluster name. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :param app_cluster_name: The app_cluster_name of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._app_cluster_name = app_cluster_name

    @property
    def app_id(self):
        """Gets the app_id of this NimbleEditProtectionTemplateInput.  # noqa: E501

        Application ID running on the server. Application ID can only be specified if application synchronization is VSS. Possible values: 'inval', 'exchange', 'exchange_dag', 'hyperv', 'sql2005', 'sql2008', 'sql2012', 'sql2014', 'sql2016', 'sql2017'.  # noqa: E501

        :return: The app_id of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this NimbleEditProtectionTemplateInput.

        Application ID running on the server. Application ID can only be specified if application synchronization is VSS. Possible values: 'inval', 'exchange', 'exchange_dag', 'hyperv', 'sql2005', 'sql2008', 'sql2012', 'sql2014', 'sql2016', 'sql2017'.  # noqa: E501

        :param app_id: The app_id of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._app_id = app_id

    @property
    def app_server(self):
        """Gets the app_server of this NimbleEditProtectionTemplateInput.  # noqa: E501

        Application server hostname. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :return: The app_server of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._app_server

    @app_server.setter
    def app_server(self, app_server):
        """Sets the app_server of this NimbleEditProtectionTemplateInput.

        Application server hostname. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :param app_server: The app_server of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._app_server = app_server

    @property
    def app_service_name(self):
        """Gets the app_service_name of this NimbleEditProtectionTemplateInput.  # noqa: E501

        If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :return: The app_service_name of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._app_service_name

    @app_service_name.setter
    def app_service_name(self, app_service_name):
        """Sets the app_service_name of this NimbleEditProtectionTemplateInput.

        If the application is running within a Windows cluster environment then this is the instance name of the service running within the cluster environment. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :param app_service_name: The app_service_name of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._app_service_name = app_service_name

    @property
    def app_sync(self):
        """Gets the app_sync of this NimbleEditProtectionTemplateInput.  # noqa: E501

        Application synchronization. Possible values: 'none', 'vss'.  # noqa: E501

        :return: The app_sync of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._app_sync

    @app_sync.setter
    def app_sync(self, app_sync):
        """Sets the app_sync of this NimbleEditProtectionTemplateInput.

        Application synchronization. Possible values: 'none', 'vss'.  # noqa: E501

        :param app_sync: The app_sync of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._app_sync = app_sync

    @property
    def description(self):
        """Gets the description of this NimbleEditProtectionTemplateInput.  # noqa: E501

        Text description of protection template. String of up to 255 printable ASCII characters.  # noqa: E501

        :return: The description of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NimbleEditProtectionTemplateInput.

        Text description of protection template. String of up to 255 printable ASCII characters.  # noqa: E501

        :param description: The description of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def edit_schedules(self):
        """Gets the edit_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501

        List of protection schedules to be edited.  # noqa: E501

        :return: The edit_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: list[NimbleNsSchedule]
        """
        return self._edit_schedules

    @edit_schedules.setter
    def edit_schedules(self, edit_schedules):
        """Sets the edit_schedules of this NimbleEditProtectionTemplateInput.

        List of protection schedules to be edited.  # noqa: E501

        :param edit_schedules: The edit_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: list[NimbleNsSchedule]
        """

        self._edit_schedules = edit_schedules

    @property
    def name(self):
        """Gets the name of this NimbleEditProtectionTemplateInput.  # noqa: E501

        Name of the protection template. User provided identifier. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :return: The name of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NimbleEditProtectionTemplateInput.

        Name of the protection template. User provided identifier. String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :param name: The name of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def remove_schedules(self):
        """Gets the remove_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501

        List of protection schedules to be removed.  # noqa: E501

        :return: The remove_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :rtype: list[ProtectionScheduleActionNimble]
        """
        return self._remove_schedules

    @remove_schedules.setter
    def remove_schedules(self, remove_schedules):
        """Sets the remove_schedules of this NimbleEditProtectionTemplateInput.

        List of protection schedules to be removed.  # noqa: E501

        :param remove_schedules: The remove_schedules of this NimbleEditProtectionTemplateInput.  # noqa: E501
        :type: list[ProtectionScheduleActionNimble]
        """

        self._remove_schedules = remove_schedules

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NimbleEditProtectionTemplateInput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
