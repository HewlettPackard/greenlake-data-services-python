# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PrimeraHosts(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'agent': 'HostAgent',
        'associated_links': 'list[AssociatedLinksInner]',
        'descriptors': 'HostDescriptors',
        'displayname': 'str',
        'domain': 'str',
        'generation': 'int',
        'host_id': 'int',
        'hostpaths': 'list[PrimeraHostPaths]',
        'id': 'str',
        'initiator_chap_enabled': 'bool',
        'initiator_chap_name': 'str',
        'initiator_encrypted_chap_secret': 'str',
        'min_lun_id': 'int',
        'name': 'str',
        'persona': 'Persona',
        'resource_uri': 'str',
        'sc_host_id': 'str',
        'state': 'State',
        'state_description': 'list[str]',
        'state_val': 'int',
        'system_uid': 'str',
        'system_wwn': 'str',
        'target_chap_enabled': 'bool',
        'target_chap_name': 'str',
        'target_encrypted_chap_secret': 'str',
        'ua_rep_lun': 'bool',
        'uri': 'str'
    }

    attribute_map = {
        'agent': 'agent',
        'associated_links': 'associatedLinks',
        'descriptors': 'descriptors',
        'displayname': 'displayname',
        'domain': 'domain',
        'generation': 'generation',
        'host_id': 'hostId',
        'hostpaths': 'hostpaths',
        'id': 'id',
        'initiator_chap_enabled': 'initiatorChapEnabled',
        'initiator_chap_name': 'initiatorChapName',
        'initiator_encrypted_chap_secret': 'initiatorEncryptedChapSecret',
        'min_lun_id': 'minLunId',
        'name': 'name',
        'persona': 'persona',
        'resource_uri': 'resourceUri',
        'sc_host_id': 'sc_HostId',
        'state': 'state',
        'state_description': 'stateDescription',
        'state_val': 'stateVal',
        'system_uid': 'systemUid',
        'system_wwn': 'systemWWN',
        'target_chap_enabled': 'targetChapEnabled',
        'target_chap_name': 'targetChapName',
        'target_encrypted_chap_secret': 'targetEncryptedChapSecret',
        'ua_rep_lun': 'uaRepLun',
        'uri': 'uri'
    }

    def __init__(self, agent=None, associated_links=None, descriptors=None, displayname=None, domain=None, generation=None, host_id=None, hostpaths=None, id=None, initiator_chap_enabled=None, initiator_chap_name=None, initiator_encrypted_chap_secret=None, min_lun_id=None, name=None, persona=None, resource_uri=None, sc_host_id=None, state=None, state_description=None, state_val=None, system_uid=None, system_wwn=None, target_chap_enabled=None, target_chap_name=None, target_encrypted_chap_secret=None, ua_rep_lun=None, uri=None):  # noqa: E501
        """PrimeraHosts - a model defined in OpenAPI"""  # noqa: E501

        self._agent = None
        self._associated_links = None
        self._descriptors = None
        self._displayname = None
        self._domain = None
        self._generation = None
        self._host_id = None
        self._hostpaths = None
        self._id = None
        self._initiator_chap_enabled = None
        self._initiator_chap_name = None
        self._initiator_encrypted_chap_secret = None
        self._min_lun_id = None
        self._name = None
        self._persona = None
        self._resource_uri = None
        self._sc_host_id = None
        self._state = None
        self._state_description = None
        self._state_val = None
        self._system_uid = None
        self._system_wwn = None
        self._target_chap_enabled = None
        self._target_chap_name = None
        self._target_encrypted_chap_secret = None
        self._ua_rep_lun = None
        self._uri = None
        self.discriminator = None

        if agent is not None:
            self.agent = agent
        if associated_links is not None:
            self.associated_links = associated_links
        if descriptors is not None:
            self.descriptors = descriptors
        if displayname is not None:
            self.displayname = displayname
        if domain is not None:
            self.domain = domain
        if generation is not None:
            self.generation = generation
        if host_id is not None:
            self.host_id = host_id
        if hostpaths is not None:
            self.hostpaths = hostpaths
        if id is not None:
            self.id = id
        if initiator_chap_enabled is not None:
            self.initiator_chap_enabled = initiator_chap_enabled
        if initiator_chap_name is not None:
            self.initiator_chap_name = initiator_chap_name
        if initiator_encrypted_chap_secret is not None:
            self.initiator_encrypted_chap_secret = initiator_encrypted_chap_secret
        if min_lun_id is not None:
            self.min_lun_id = min_lun_id
        if name is not None:
            self.name = name
        if persona is not None:
            self.persona = persona
        if resource_uri is not None:
            self.resource_uri = resource_uri
        if sc_host_id is not None:
            self.sc_host_id = sc_host_id
        if state is not None:
            self.state = state
        if state_description is not None:
            self.state_description = state_description
        if state_val is not None:
            self.state_val = state_val
        if system_uid is not None:
            self.system_uid = system_uid
        if system_wwn is not None:
            self.system_wwn = system_wwn
        if target_chap_enabled is not None:
            self.target_chap_enabled = target_chap_enabled
        if target_chap_name is not None:
            self.target_chap_name = target_chap_name
        if target_encrypted_chap_secret is not None:
            self.target_encrypted_chap_secret = target_encrypted_chap_secret
        if ua_rep_lun is not None:
            self.ua_rep_lun = ua_rep_lun
        if uri is not None:
            self.uri = uri

    @property
    def agent(self):
        """Gets the agent of this PrimeraHosts.  # noqa: E501


        :return: The agent of this PrimeraHosts.  # noqa: E501
        :rtype: HostAgent
        """
        return self._agent

    @agent.setter
    def agent(self, agent):
        """Sets the agent of this PrimeraHosts.


        :param agent: The agent of this PrimeraHosts.  # noqa: E501
        :type: HostAgent
        """

        self._agent = agent

    @property
    def associated_links(self):
        """Gets the associated_links of this PrimeraHosts.  # noqa: E501

        Associated Links Details  # noqa: E501

        :return: The associated_links of this PrimeraHosts.  # noqa: E501
        :rtype: list[AssociatedLinksInner]
        """
        return self._associated_links

    @associated_links.setter
    def associated_links(self, associated_links):
        """Sets the associated_links of this PrimeraHosts.

        Associated Links Details  # noqa: E501

        :param associated_links: The associated_links of this PrimeraHosts.  # noqa: E501
        :type: list[AssociatedLinksInner]
        """

        self._associated_links = associated_links

    @property
    def descriptors(self):
        """Gets the descriptors of this PrimeraHosts.  # noqa: E501


        :return: The descriptors of this PrimeraHosts.  # noqa: E501
        :rtype: HostDescriptors
        """
        return self._descriptors

    @descriptors.setter
    def descriptors(self, descriptors):
        """Sets the descriptors of this PrimeraHosts.


        :param descriptors: The descriptors of this PrimeraHosts.  # noqa: E501
        :type: HostDescriptors
        """

        self._descriptors = descriptors

    @property
    def displayname(self):
        """Gets the displayname of this PrimeraHosts.  # noqa: E501

        Name to be used for display purposes  # noqa: E501

        :return: The displayname of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._displayname

    @displayname.setter
    def displayname(self, displayname):
        """Sets the displayname of this PrimeraHosts.

        Name to be used for display purposes  # noqa: E501

        :param displayname: The displayname of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._displayname = displayname

    @property
    def domain(self):
        """Gets the domain of this PrimeraHosts.  # noqa: E501

        Domain name of the Host  # noqa: E501

        :return: The domain of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this PrimeraHosts.

        Domain name of the Host  # noqa: E501

        :param domain: The domain of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._domain = domain

    @property
    def generation(self):
        """Gets the generation of this PrimeraHosts.  # noqa: E501

        Generation Time of the Resource  # noqa: E501

        :return: The generation of this PrimeraHosts.  # noqa: E501
        :rtype: int
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this PrimeraHosts.

        Generation Time of the Resource  # noqa: E501

        :param generation: The generation of this PrimeraHosts.  # noqa: E501
        :type: int
        """

        self._generation = generation

    @property
    def host_id(self):
        """Gets the host_id of this PrimeraHosts.  # noqa: E501

        Numeric ID of the resource  # noqa: E501

        :return: The host_id of this PrimeraHosts.  # noqa: E501
        :rtype: int
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id):
        """Sets the host_id of this PrimeraHosts.

        Numeric ID of the resource  # noqa: E501

        :param host_id: The host_id of this PrimeraHosts.  # noqa: E501
        :type: int
        """

        self._host_id = host_id

    @property
    def hostpaths(self):
        """Gets the hostpaths of this PrimeraHosts.  # noqa: E501


        :return: The hostpaths of this PrimeraHosts.  # noqa: E501
        :rtype: list[PrimeraHostPaths]
        """
        return self._hostpaths

    @hostpaths.setter
    def hostpaths(self, hostpaths):
        """Sets the hostpaths of this PrimeraHosts.


        :param hostpaths: The hostpaths of this PrimeraHosts.  # noqa: E501
        :type: list[PrimeraHostPaths]
        """

        self._hostpaths = hostpaths

    @property
    def id(self):
        """Gets the id of this PrimeraHosts.  # noqa: E501

        Host Resource UID  # noqa: E501

        :return: The id of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PrimeraHosts.

        Host Resource UID  # noqa: E501

        :param id: The id of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def initiator_chap_enabled(self):
        """Gets the initiator_chap_enabled of this PrimeraHosts.  # noqa: E501

        Indicates if the Initiator Chap is enabled or not  # noqa: E501

        :return: The initiator_chap_enabled of this PrimeraHosts.  # noqa: E501
        :rtype: bool
        """
        return self._initiator_chap_enabled

    @initiator_chap_enabled.setter
    def initiator_chap_enabled(self, initiator_chap_enabled):
        """Sets the initiator_chap_enabled of this PrimeraHosts.

        Indicates if the Initiator Chap is enabled or not  # noqa: E501

        :param initiator_chap_enabled: The initiator_chap_enabled of this PrimeraHosts.  # noqa: E501
        :type: bool
        """

        self._initiator_chap_enabled = initiator_chap_enabled

    @property
    def initiator_chap_name(self):
        """Gets the initiator_chap_name of this PrimeraHosts.  # noqa: E501

        Initiator Chap Name  # noqa: E501

        :return: The initiator_chap_name of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._initiator_chap_name

    @initiator_chap_name.setter
    def initiator_chap_name(self, initiator_chap_name):
        """Sets the initiator_chap_name of this PrimeraHosts.

        Initiator Chap Name  # noqa: E501

        :param initiator_chap_name: The initiator_chap_name of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._initiator_chap_name = initiator_chap_name

    @property
    def initiator_encrypted_chap_secret(self):
        """Gets the initiator_encrypted_chap_secret of this PrimeraHosts.  # noqa: E501

        Initiator Encrypted Chap Secret  # noqa: E501

        :return: The initiator_encrypted_chap_secret of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._initiator_encrypted_chap_secret

    @initiator_encrypted_chap_secret.setter
    def initiator_encrypted_chap_secret(self, initiator_encrypted_chap_secret):
        """Sets the initiator_encrypted_chap_secret of this PrimeraHosts.

        Initiator Encrypted Chap Secret  # noqa: E501

        :param initiator_encrypted_chap_secret: The initiator_encrypted_chap_secret of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._initiator_encrypted_chap_secret = initiator_encrypted_chap_secret

    @property
    def min_lun_id(self):
        """Gets the min_lun_id of this PrimeraHosts.  # noqa: E501

        LUN Id of the host  # noqa: E501

        :return: The min_lun_id of this PrimeraHosts.  # noqa: E501
        :rtype: int
        """
        return self._min_lun_id

    @min_lun_id.setter
    def min_lun_id(self, min_lun_id):
        """Sets the min_lun_id of this PrimeraHosts.

        LUN Id of the host  # noqa: E501

        :param min_lun_id: The min_lun_id of this PrimeraHosts.  # noqa: E501
        :type: int
        """

        self._min_lun_id = min_lun_id

    @property
    def name(self):
        """Gets the name of this PrimeraHosts.  # noqa: E501

        Host Name  # noqa: E501

        :return: The name of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PrimeraHosts.

        Host Name  # noqa: E501

        :param name: The name of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def persona(self):
        """Gets the persona of this PrimeraHosts.  # noqa: E501


        :return: The persona of this PrimeraHosts.  # noqa: E501
        :rtype: Persona
        """
        return self._persona

    @persona.setter
    def persona(self, persona):
        """Sets the persona of this PrimeraHosts.


        :param persona: The persona of this PrimeraHosts.  # noqa: E501
        :type: Persona
        """

        self._persona = persona

    @property
    def resource_uri(self):
        """Gets the resource_uri of this PrimeraHosts.  # noqa: E501

        Resoure Uri of the Host          # noqa: E501

        :return: The resource_uri of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """Sets the resource_uri of this PrimeraHosts.

        Resoure Uri of the Host          # noqa: E501

        :param resource_uri: The resource_uri of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._resource_uri = resource_uri

    @property
    def sc_host_id(self):
        """Gets the sc_host_id of this PrimeraHosts.  # noqa: E501

        Host Service Host Id  # noqa: E501

        :return: The sc_host_id of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._sc_host_id

    @sc_host_id.setter
    def sc_host_id(self, sc_host_id):
        """Sets the sc_host_id of this PrimeraHosts.

        Host Service Host Id  # noqa: E501

        :param sc_host_id: The sc_host_id of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._sc_host_id = sc_host_id

    @property
    def state(self):
        """Gets the state of this PrimeraHosts.  # noqa: E501


        :return: The state of this PrimeraHosts.  # noqa: E501
        :rtype: State
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this PrimeraHosts.


        :param state: The state of this PrimeraHosts.  # noqa: E501
        :type: State
        """

        self._state = state

    @property
    def state_description(self):
        """Gets the state_description of this PrimeraHosts.  # noqa: E501


        :return: The state_description of this PrimeraHosts.  # noqa: E501
        :rtype: list[str]
        """
        return self._state_description

    @state_description.setter
    def state_description(self, state_description):
        """Sets the state_description of this PrimeraHosts.


        :param state_description: The state_description of this PrimeraHosts.  # noqa: E501
        :type: list[str]
        """

        self._state_description = state_description

    @property
    def state_val(self):
        """Gets the state_val of this PrimeraHosts.  # noqa: E501

        Health Status of the Host  # noqa: E501

        :return: The state_val of this PrimeraHosts.  # noqa: E501
        :rtype: int
        """
        return self._state_val

    @state_val.setter
    def state_val(self, state_val):
        """Sets the state_val of this PrimeraHosts.

        Health Status of the Host  # noqa: E501

        :param state_val: The state_val of this PrimeraHosts.  # noqa: E501
        :type: int
        """

        self._state_val = state_val

    @property
    def system_uid(self):
        """Gets the system_uid of this PrimeraHosts.  # noqa: E501

        Serial Number of the system     # noqa: E501

        :return: The system_uid of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._system_uid

    @system_uid.setter
    def system_uid(self, system_uid):
        """Sets the system_uid of this PrimeraHosts.

        Serial Number of the system     # noqa: E501

        :param system_uid: The system_uid of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._system_uid = system_uid

    @property
    def system_wwn(self):
        """Gets the system_wwn of this PrimeraHosts.  # noqa: E501

        System wwn     # noqa: E501

        :return: The system_wwn of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._system_wwn

    @system_wwn.setter
    def system_wwn(self, system_wwn):
        """Sets the system_wwn of this PrimeraHosts.

        System wwn     # noqa: E501

        :param system_wwn: The system_wwn of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._system_wwn = system_wwn

    @property
    def target_chap_enabled(self):
        """Gets the target_chap_enabled of this PrimeraHosts.  # noqa: E501

        Indicates if the Target Chap is enabled or not  # noqa: E501

        :return: The target_chap_enabled of this PrimeraHosts.  # noqa: E501
        :rtype: bool
        """
        return self._target_chap_enabled

    @target_chap_enabled.setter
    def target_chap_enabled(self, target_chap_enabled):
        """Sets the target_chap_enabled of this PrimeraHosts.

        Indicates if the Target Chap is enabled or not  # noqa: E501

        :param target_chap_enabled: The target_chap_enabled of this PrimeraHosts.  # noqa: E501
        :type: bool
        """

        self._target_chap_enabled = target_chap_enabled

    @property
    def target_chap_name(self):
        """Gets the target_chap_name of this PrimeraHosts.  # noqa: E501

        Target Chap Name  # noqa: E501

        :return: The target_chap_name of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._target_chap_name

    @target_chap_name.setter
    def target_chap_name(self, target_chap_name):
        """Sets the target_chap_name of this PrimeraHosts.

        Target Chap Name  # noqa: E501

        :param target_chap_name: The target_chap_name of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._target_chap_name = target_chap_name

    @property
    def target_encrypted_chap_secret(self):
        """Gets the target_encrypted_chap_secret of this PrimeraHosts.  # noqa: E501

        Target Encrypted Chap Secret  # noqa: E501

        :return: The target_encrypted_chap_secret of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._target_encrypted_chap_secret

    @target_encrypted_chap_secret.setter
    def target_encrypted_chap_secret(self, target_encrypted_chap_secret):
        """Sets the target_encrypted_chap_secret of this PrimeraHosts.

        Target Encrypted Chap Secret  # noqa: E501

        :param target_encrypted_chap_secret: The target_encrypted_chap_secret of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._target_encrypted_chap_secret = target_encrypted_chap_secret

    @property
    def ua_rep_lun(self):
        """Gets the ua_rep_lun of this PrimeraHosts.  # noqa: E501

        Indicates if the UaRepLun is enabled or not  # noqa: E501

        :return: The ua_rep_lun of this PrimeraHosts.  # noqa: E501
        :rtype: bool
        """
        return self._ua_rep_lun

    @ua_rep_lun.setter
    def ua_rep_lun(self, ua_rep_lun):
        """Sets the ua_rep_lun of this PrimeraHosts.

        Indicates if the UaRepLun is enabled or not  # noqa: E501

        :param ua_rep_lun: The ua_rep_lun of this PrimeraHosts.  # noqa: E501
        :type: bool
        """

        self._ua_rep_lun = ua_rep_lun

    @property
    def uri(self):
        """Gets the uri of this PrimeraHosts.  # noqa: E501

        Resoure Uri of the Host  # noqa: E501

        :return: The uri of this PrimeraHosts.  # noqa: E501
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this PrimeraHosts.

        Resoure Uri of the Host  # noqa: E501

        :param uri: The uri of this PrimeraHosts.  # noqa: E501
        :type: str
        """

        self._uri = uri

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PrimeraHosts):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
