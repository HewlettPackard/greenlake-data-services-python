# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class UninitializedArrayResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'all_flash': 'bool',
        'array_name': 'str',
        'associated_links': 'AssociatedLinks',
        'console_uri': 'str',
        'count_of_fc_ports': 'int',
        'customer_id': 'str',
        'dedupe_configurable': 'bool',
        'generation': 'int',
        'id': 'str',
        'model_str': 'str',
        'resource_uri': 'str',
        'serial': 'str',
        'type': 'str',
        'version': 'str',
        'zconf_ipaddrs': 'list[NimbleZConfIP]'
    }

    attribute_map = {
        'all_flash': 'all_flash',
        'array_name': 'array_name',
        'associated_links': 'associated_links',
        'console_uri': 'consoleUri',
        'count_of_fc_ports': 'count_of_fc_ports',
        'customer_id': 'customerId',
        'dedupe_configurable': 'dedupe_configurable',
        'generation': 'generation',
        'id': 'id',
        'model_str': 'model_str',
        'resource_uri': 'resourceUri',
        'serial': 'serial',
        'type': 'type',
        'version': 'version',
        'zconf_ipaddrs': 'zconf_ipaddrs'
    }

    def __init__(self, all_flash=None, array_name=None, associated_links=None, console_uri=None, count_of_fc_ports=None, customer_id=None, dedupe_configurable=None, generation=None, id=None, model_str=None, resource_uri=None, serial=None, type=None, version=None, zconf_ipaddrs=None):  # noqa: E501
        """UninitializedArrayResponse - a model defined in OpenAPI"""  # noqa: E501

        self._all_flash = None
        self._array_name = None
        self._associated_links = None
        self._console_uri = None
        self._count_of_fc_ports = None
        self._customer_id = None
        self._dedupe_configurable = None
        self._generation = None
        self._id = None
        self._model_str = None
        self._resource_uri = None
        self._serial = None
        self._type = None
        self._version = None
        self._zconf_ipaddrs = None
        self.discriminator = None

        if all_flash is not None:
            self.all_flash = all_flash
        if array_name is not None:
            self.array_name = array_name
        if associated_links is not None:
            self.associated_links = associated_links
        if console_uri is not None:
            self.console_uri = console_uri
        if count_of_fc_ports is not None:
            self.count_of_fc_ports = count_of_fc_ports
        if customer_id is not None:
            self.customer_id = customer_id
        if dedupe_configurable is not None:
            self.dedupe_configurable = dedupe_configurable
        if generation is not None:
            self.generation = generation
        if id is not None:
            self.id = id
        if model_str is not None:
            self.model_str = model_str
        if resource_uri is not None:
            self.resource_uri = resource_uri
        if serial is not None:
            self.serial = serial
        if type is not None:
            self.type = type
        if version is not None:
            self.version = version
        if zconf_ipaddrs is not None:
            self.zconf_ipaddrs = zconf_ipaddrs

    @property
    def all_flash(self):
        """Gets the all_flash of this UninitializedArrayResponse.  # noqa: E501

        True if it is an All-Flash array, False otherwise.Possible values : true, false.  # noqa: E501

        :return: The all_flash of this UninitializedArrayResponse.  # noqa: E501
        :rtype: bool
        """
        return self._all_flash

    @all_flash.setter
    def all_flash(self, all_flash):
        """Sets the all_flash of this UninitializedArrayResponse.

        True if it is an All-Flash array, False otherwise.Possible values : true, false.  # noqa: E501

        :param all_flash: The all_flash of this UninitializedArrayResponse.  # noqa: E501
        :type: bool
        """

        self._all_flash = all_flash

    @property
    def array_name(self):
        """Gets the array_name of this UninitializedArrayResponse.  # noqa: E501

        Name of the uninitialized array.String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :return: The array_name of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._array_name

    @array_name.setter
    def array_name(self, array_name):
        """Sets the array_name of this UninitializedArrayResponse.

        Name of the uninitialized array.String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :param array_name: The array_name of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._array_name = array_name

    @property
    def associated_links(self):
        """Gets the associated_links of this UninitializedArrayResponse.  # noqa: E501


        :return: The associated_links of this UninitializedArrayResponse.  # noqa: E501
        :rtype: AssociatedLinks
        """
        return self._associated_links

    @associated_links.setter
    def associated_links(self, associated_links):
        """Sets the associated_links of this UninitializedArrayResponse.


        :param associated_links: The associated_links of this UninitializedArrayResponse.  # noqa: E501
        :type: AssociatedLinks
        """

        self._associated_links = associated_links

    @property
    def console_uri(self):
        """Gets the console_uri of this UninitializedArrayResponse.  # noqa: E501

        consoleUri for detailed storage object  # noqa: E501

        :return: The console_uri of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._console_uri

    @console_uri.setter
    def console_uri(self, console_uri):
        """Sets the console_uri of this UninitializedArrayResponse.

        consoleUri for detailed storage object  # noqa: E501

        :param console_uri: The console_uri of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._console_uri = console_uri

    @property
    def count_of_fc_ports(self):
        """Gets the count_of_fc_ports of this UninitializedArrayResponse.  # noqa: E501

        Number of Fibre Channel ports of the uninitialized array. Unsigned 64-bit integer.  # noqa: E501

        :return: The count_of_fc_ports of this UninitializedArrayResponse.  # noqa: E501
        :rtype: int
        """
        return self._count_of_fc_ports

    @count_of_fc_ports.setter
    def count_of_fc_ports(self, count_of_fc_ports):
        """Sets the count_of_fc_ports of this UninitializedArrayResponse.

        Number of Fibre Channel ports of the uninitialized array. Unsigned 64-bit integer.  # noqa: E501

        :param count_of_fc_ports: The count_of_fc_ports of this UninitializedArrayResponse.  # noqa: E501
        :type: int
        """

        self._count_of_fc_ports = count_of_fc_ports

    @property
    def customer_id(self):
        """Gets the customer_id of this UninitializedArrayResponse.  # noqa: E501

        customerId  # noqa: E501

        :return: The customer_id of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this UninitializedArrayResponse.

        customerId  # noqa: E501

        :param customer_id: The customer_id of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._customer_id = customer_id

    @property
    def dedupe_configurable(self):
        """Gets the dedupe_configurable of this UninitializedArrayResponse.  # noqa: E501

        True if it is a hybrid array that is capable of updating data deduplication setting, False otherwise.Possible values : true, false.  # noqa: E501

        :return: The dedupe_configurable of this UninitializedArrayResponse.  # noqa: E501
        :rtype: bool
        """
        return self._dedupe_configurable

    @dedupe_configurable.setter
    def dedupe_configurable(self, dedupe_configurable):
        """Sets the dedupe_configurable of this UninitializedArrayResponse.

        True if it is a hybrid array that is capable of updating data deduplication setting, False otherwise.Possible values : true, false.  # noqa: E501

        :param dedupe_configurable: The dedupe_configurable of this UninitializedArrayResponse.  # noqa: E501
        :type: bool
        """

        self._dedupe_configurable = dedupe_configurable

    @property
    def generation(self):
        """Gets the generation of this UninitializedArrayResponse.  # noqa: E501

        generation  # noqa: E501

        :return: The generation of this UninitializedArrayResponse.  # noqa: E501
        :rtype: int
        """
        return self._generation

    @generation.setter
    def generation(self, generation):
        """Sets the generation of this UninitializedArrayResponse.

        generation  # noqa: E501

        :param generation: The generation of this UninitializedArrayResponse.  # noqa: E501
        :type: int
        """

        self._generation = generation

    @property
    def id(self):
        """Gets the id of this UninitializedArrayResponse.  # noqa: E501

        Identifier for the uninitialized array. A 42 digit hexadecimal number.  # noqa: E501

        :return: The id of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UninitializedArrayResponse.

        Identifier for the uninitialized array. A 42 digit hexadecimal number.  # noqa: E501

        :param id: The id of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def model_str(self):
        """Gets the model_str of this UninitializedArrayResponse.  # noqa: E501

        Model description of the uninitialized array.String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :return: The model_str of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._model_str

    @model_str.setter
    def model_str(self, model_str):
        """Sets the model_str of this UninitializedArrayResponse.

        Model description of the uninitialized array.String of up to 64 alphanumeric characters, - and . and : are allowed after first character.  # noqa: E501

        :param model_str: The model_str of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._model_str = model_str

    @property
    def resource_uri(self):
        """Gets the resource_uri of this UninitializedArrayResponse.  # noqa: E501


        :return: The resource_uri of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """Sets the resource_uri of this UninitializedArrayResponse.


        :param resource_uri: The resource_uri of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._resource_uri = resource_uri

    @property
    def serial(self):
        """Gets the serial of this UninitializedArrayResponse.  # noqa: E501

        Serial Number of the uninitialized array. A 42 digit hexadecimal number.  # noqa: E501

        :return: The serial of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._serial

    @serial.setter
    def serial(self, serial):
        """Sets the serial of this UninitializedArrayResponse.

        Serial Number of the uninitialized array. A 42 digit hexadecimal number.  # noqa: E501

        :param serial: The serial of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._serial = serial

    @property
    def type(self):
        """Gets the type of this UninitializedArrayResponse.  # noqa: E501

        type  # noqa: E501

        :return: The type of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UninitializedArrayResponse.

        type  # noqa: E501

        :param type: The type of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def version(self):
        """Gets the version of this UninitializedArrayResponse.  # noqa: E501

        Version of the uninitialized array. String of up to 64 alphanumeric characters, - and . and :are allowed after first character.  # noqa: E501

        :return: The version of this UninitializedArrayResponse.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this UninitializedArrayResponse.

        Version of the uninitialized array. String of up to 64 alphanumeric characters, - and . and :are allowed after first character.  # noqa: E501

        :param version: The version of this UninitializedArrayResponse.  # noqa: E501
        :type: str
        """

        self._version = version

    @property
    def zconf_ipaddrs(self):
        """Gets the zconf_ipaddrs of this UninitializedArrayResponse.  # noqa: E501

        List of link local zero conf address of the uninitialized array. List of IP Addresses  # noqa: E501

        :return: The zconf_ipaddrs of this UninitializedArrayResponse.  # noqa: E501
        :rtype: list[NimbleZConfIP]
        """
        return self._zconf_ipaddrs

    @zconf_ipaddrs.setter
    def zconf_ipaddrs(self, zconf_ipaddrs):
        """Sets the zconf_ipaddrs of this UninitializedArrayResponse.

        List of link local zero conf address of the uninitialized array. List of IP Addresses  # noqa: E501

        :param zconf_ipaddrs: The zconf_ipaddrs of this UninitializedArrayResponse.  # noqa: E501
        :type: list[NimbleZConfIP]
        """

        self._zconf_ipaddrs = zconf_ipaddrs

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UninitializedArrayResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
