# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class Syscapacity(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'associated_links': 'SysAssociatedLinks',
        'capacity_by_tier': 'CapacityByTier',
        'capacity_summary': 'SystemCapacitySummary',
        'customer_id': 'str',
        'fc_capacity_summary': 'SystemCapacitySummary',
        'id': 'str',
        'nl_capacity_summary': 'SystemCapacitySummary',
        'request_uri': 'str',
        'resource_uri': 'str',
        'ssd_capacity_summary': 'SystemCapacitySummary',
        'system_id': 'str',
        'utilization_summary': 'UtilizationSummary'
    }

    attribute_map = {
        'associated_links': 'associatedLinks',
        'capacity_by_tier': 'capacityByTier',
        'capacity_summary': 'capacitySummary',
        'customer_id': 'customerId',
        'fc_capacity_summary': 'fcCapacitySummary',
        'id': 'id',
        'nl_capacity_summary': 'nlCapacitySummary',
        'request_uri': 'requestUri',
        'resource_uri': 'resourceUri',
        'ssd_capacity_summary': 'ssdCapacitySummary',
        'system_id': 'systemId',
        'utilization_summary': 'utilizationSummary'
    }

    def __init__(self, associated_links=None, capacity_by_tier=None, capacity_summary=None, customer_id=None, fc_capacity_summary=None, id=None, nl_capacity_summary=None, request_uri=None, resource_uri=None, ssd_capacity_summary=None, system_id=None, utilization_summary=None):  # noqa: E501
        """Syscapacity - a model defined in OpenAPI"""  # noqa: E501

        self._associated_links = None
        self._capacity_by_tier = None
        self._capacity_summary = None
        self._customer_id = None
        self._fc_capacity_summary = None
        self._id = None
        self._nl_capacity_summary = None
        self._request_uri = None
        self._resource_uri = None
        self._ssd_capacity_summary = None
        self._system_id = None
        self._utilization_summary = None
        self.discriminator = None

        if associated_links is not None:
            self.associated_links = associated_links
        if capacity_by_tier is not None:
            self.capacity_by_tier = capacity_by_tier
        if capacity_summary is not None:
            self.capacity_summary = capacity_summary
        if customer_id is not None:
            self.customer_id = customer_id
        if fc_capacity_summary is not None:
            self.fc_capacity_summary = fc_capacity_summary
        if id is not None:
            self.id = id
        if nl_capacity_summary is not None:
            self.nl_capacity_summary = nl_capacity_summary
        if request_uri is not None:
            self.request_uri = request_uri
        if resource_uri is not None:
            self.resource_uri = resource_uri
        if ssd_capacity_summary is not None:
            self.ssd_capacity_summary = ssd_capacity_summary
        if system_id is not None:
            self.system_id = system_id
        if utilization_summary is not None:
            self.utilization_summary = utilization_summary

    @property
    def associated_links(self):
        """Gets the associated_links of this Syscapacity.  # noqa: E501


        :return: The associated_links of this Syscapacity.  # noqa: E501
        :rtype: SysAssociatedLinks
        """
        return self._associated_links

    @associated_links.setter
    def associated_links(self, associated_links):
        """Sets the associated_links of this Syscapacity.


        :param associated_links: The associated_links of this Syscapacity.  # noqa: E501
        :type: SysAssociatedLinks
        """

        self._associated_links = associated_links

    @property
    def capacity_by_tier(self):
        """Gets the capacity_by_tier of this Syscapacity.  # noqa: E501


        :return: The capacity_by_tier of this Syscapacity.  # noqa: E501
        :rtype: CapacityByTier
        """
        return self._capacity_by_tier

    @capacity_by_tier.setter
    def capacity_by_tier(self, capacity_by_tier):
        """Sets the capacity_by_tier of this Syscapacity.


        :param capacity_by_tier: The capacity_by_tier of this Syscapacity.  # noqa: E501
        :type: CapacityByTier
        """

        self._capacity_by_tier = capacity_by_tier

    @property
    def capacity_summary(self):
        """Gets the capacity_summary of this Syscapacity.  # noqa: E501


        :return: The capacity_summary of this Syscapacity.  # noqa: E501
        :rtype: SystemCapacitySummary
        """
        return self._capacity_summary

    @capacity_summary.setter
    def capacity_summary(self, capacity_summary):
        """Sets the capacity_summary of this Syscapacity.


        :param capacity_summary: The capacity_summary of this Syscapacity.  # noqa: E501
        :type: SystemCapacitySummary
        """

        self._capacity_summary = capacity_summary

    @property
    def customer_id(self):
        """Gets the customer_id of this Syscapacity.  # noqa: E501

        customerId  # noqa: E501

        :return: The customer_id of this Syscapacity.  # noqa: E501
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this Syscapacity.

        customerId  # noqa: E501

        :param customer_id: The customer_id of this Syscapacity.  # noqa: E501
        :type: str
        """

        self._customer_id = customer_id

    @property
    def fc_capacity_summary(self):
        """Gets the fc_capacity_summary of this Syscapacity.  # noqa: E501


        :return: The fc_capacity_summary of this Syscapacity.  # noqa: E501
        :rtype: SystemCapacitySummary
        """
        return self._fc_capacity_summary

    @fc_capacity_summary.setter
    def fc_capacity_summary(self, fc_capacity_summary):
        """Sets the fc_capacity_summary of this Syscapacity.


        :param fc_capacity_summary: The fc_capacity_summary of this Syscapacity.  # noqa: E501
        :type: SystemCapacitySummary
        """

        self._fc_capacity_summary = fc_capacity_summary

    @property
    def id(self):
        """Gets the id of this Syscapacity.  # noqa: E501

        ID string uniquely identifying the object.  # noqa: E501

        :return: The id of this Syscapacity.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Syscapacity.

        ID string uniquely identifying the object.  # noqa: E501

        :param id: The id of this Syscapacity.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def nl_capacity_summary(self):
        """Gets the nl_capacity_summary of this Syscapacity.  # noqa: E501


        :return: The nl_capacity_summary of this Syscapacity.  # noqa: E501
        :rtype: SystemCapacitySummary
        """
        return self._nl_capacity_summary

    @nl_capacity_summary.setter
    def nl_capacity_summary(self, nl_capacity_summary):
        """Sets the nl_capacity_summary of this Syscapacity.


        :param nl_capacity_summary: The nl_capacity_summary of this Syscapacity.  # noqa: E501
        :type: SystemCapacitySummary
        """

        self._nl_capacity_summary = nl_capacity_summary

    @property
    def request_uri(self):
        """Gets the request_uri of this Syscapacity.  # noqa: E501

        requestUri for detailed storage object  # noqa: E501

        :return: The request_uri of this Syscapacity.  # noqa: E501
        :rtype: str
        """
        return self._request_uri

    @request_uri.setter
    def request_uri(self, request_uri):
        """Sets the request_uri of this Syscapacity.

        requestUri for detailed storage object  # noqa: E501

        :param request_uri: The request_uri of this Syscapacity.  # noqa: E501
        :type: str
        """

        self._request_uri = request_uri

    @property
    def resource_uri(self):
        """Gets the resource_uri of this Syscapacity.  # noqa: E501

        resourceUri for detailed storage object  # noqa: E501

        :return: The resource_uri of this Syscapacity.  # noqa: E501
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """Sets the resource_uri of this Syscapacity.

        resourceUri for detailed storage object  # noqa: E501

        :param resource_uri: The resource_uri of this Syscapacity.  # noqa: E501
        :type: str
        """

        self._resource_uri = resource_uri

    @property
    def ssd_capacity_summary(self):
        """Gets the ssd_capacity_summary of this Syscapacity.  # noqa: E501


        :return: The ssd_capacity_summary of this Syscapacity.  # noqa: E501
        :rtype: SystemCapacitySummary
        """
        return self._ssd_capacity_summary

    @ssd_capacity_summary.setter
    def ssd_capacity_summary(self, ssd_capacity_summary):
        """Sets the ssd_capacity_summary of this Syscapacity.


        :param ssd_capacity_summary: The ssd_capacity_summary of this Syscapacity.  # noqa: E501
        :type: SystemCapacitySummary
        """

        self._ssd_capacity_summary = ssd_capacity_summary

    @property
    def system_id(self):
        """Gets the system_id of this Syscapacity.  # noqa: E501

        SystemId/serialNumber of the array.  # noqa: E501

        :return: The system_id of this Syscapacity.  # noqa: E501
        :rtype: str
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this Syscapacity.

        SystemId/serialNumber of the array.  # noqa: E501

        :param system_id: The system_id of this Syscapacity.  # noqa: E501
        :type: str
        """

        self._system_id = system_id

    @property
    def utilization_summary(self):
        """Gets the utilization_summary of this Syscapacity.  # noqa: E501


        :return: The utilization_summary of this Syscapacity.  # noqa: E501
        :rtype: UtilizationSummary
        """
        return self._utilization_summary

    @utilization_summary.setter
    def utilization_summary(self, utilization_summary):
        """Sets the utilization_summary of this Syscapacity.


        :param utilization_summary: The utilization_summary of this Syscapacity.  # noqa: E501
        :type: UtilizationSummary
        """

        self._utilization_summary = utilization_summary

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Syscapacity):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
