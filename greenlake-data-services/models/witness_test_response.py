# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class WitnessTestResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'array_name': 'str',
        'role': 'str',
        'witness_connectivity_message': 'str',
        'witness_connectivity_state': 'str'
    }

    attribute_map = {
        'array_name': 'array_name',
        'role': 'role',
        'witness_connectivity_message': 'witness_connectivity_message',
        'witness_connectivity_state': 'witness_connectivity_state'
    }

    def __init__(self, array_name=None, role=None, witness_connectivity_message=None, witness_connectivity_state=None):  # noqa: E501
        """WitnessTestResponse - a model defined in OpenAPI"""  # noqa: E501

        self._array_name = None
        self._role = None
        self._witness_connectivity_message = None
        self._witness_connectivity_state = None
        self.discriminator = None

        if array_name is not None:
            self.array_name = array_name
        if role is not None:
            self.role = role
        if witness_connectivity_message is not None:
            self.witness_connectivity_message = witness_connectivity_message
        if witness_connectivity_state is not None:
            self.witness_connectivity_state = witness_connectivity_state

    @property
    def array_name(self):
        """Gets the array_name of this WitnessTestResponse.  # noqa: E501

        Name of an array.  # noqa: E501

        :return: The array_name of this WitnessTestResponse.  # noqa: E501
        :rtype: str
        """
        return self._array_name

    @array_name.setter
    def array_name(self, array_name):
        """Sets the array_name of this WitnessTestResponse.

        Name of an array.  # noqa: E501

        :param array_name: The array_name of this WitnessTestResponse.  # noqa: E501
        :type: str
        """

        self._array_name = array_name

    @property
    def role(self):
        """Gets the role of this WitnessTestResponse.  # noqa: E501


        :return: The role of this WitnessTestResponse.  # noqa: E501
        :rtype: str
        """
        return self._role

    @role.setter
    def role(self, role):
        """Sets the role of this WitnessTestResponse.


        :param role: The role of this WitnessTestResponse.  # noqa: E501
        :type: str
        """

        self._role = role

    @property
    def witness_connectivity_message(self):
        """Gets the witness_connectivity_message of this WitnessTestResponse.  # noqa: E501

        Reachability message of the witness.  # noqa: E501

        :return: The witness_connectivity_message of this WitnessTestResponse.  # noqa: E501
        :rtype: str
        """
        return self._witness_connectivity_message

    @witness_connectivity_message.setter
    def witness_connectivity_message(self, witness_connectivity_message):
        """Sets the witness_connectivity_message of this WitnessTestResponse.

        Reachability message of the witness.  # noqa: E501

        :param witness_connectivity_message: The witness_connectivity_message of this WitnessTestResponse.  # noqa: E501
        :type: str
        """

        self._witness_connectivity_message = witness_connectivity_message

    @property
    def witness_connectivity_state(self):
        """Gets the witness_connectivity_state of this WitnessTestResponse.  # noqa: E501

        Reachability status of the witness.  # noqa: E501

        :return: The witness_connectivity_state of this WitnessTestResponse.  # noqa: E501
        :rtype: str
        """
        return self._witness_connectivity_state

    @witness_connectivity_state.setter
    def witness_connectivity_state(self, witness_connectivity_state):
        """Sets the witness_connectivity_state of this WitnessTestResponse.

        Reachability status of the witness.  # noqa: E501

        :param witness_connectivity_state: The witness_connectivity_state of this WitnessTestResponse.  # noqa: E501
        :type: str
        """

        self._witness_connectivity_state = witness_connectivity_state

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WitnessTestResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
