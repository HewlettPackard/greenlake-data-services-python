# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class RemoveRemoteCopyTargetInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'replication_partner_system_id': 'str',
        'src_replication_id': 'str',
        'target_replication_id': 'str'
    }

    attribute_map = {
        'replication_partner_system_id': 'replicationPartnerSystemId',
        'src_replication_id': 'srcReplicationId',
        'target_replication_id': 'targetReplicationId'
    }

    def __init__(self, replication_partner_system_id=None, src_replication_id=None, target_replication_id=None):  # noqa: E501
        """RemoveRemoteCopyTargetInput - a model defined in OpenAPI"""  # noqa: E501

        self._replication_partner_system_id = None
        self._src_replication_id = None
        self._target_replication_id = None
        self.discriminator = None

        if replication_partner_system_id is not None:
            self.replication_partner_system_id = replication_partner_system_id
        self.src_replication_id = src_replication_id
        if target_replication_id is not None:
            self.target_replication_id = target_replication_id

    @property
    def replication_partner_system_id(self):
        """Gets the replication_partner_system_id of this RemoveRemoteCopyTargetInput.  # noqa: E501

        SystemId of target replication partner  # noqa: E501

        :return: The replication_partner_system_id of this RemoveRemoteCopyTargetInput.  # noqa: E501
        :rtype: str
        """
        return self._replication_partner_system_id

    @replication_partner_system_id.setter
    def replication_partner_system_id(self, replication_partner_system_id):
        """Sets the replication_partner_system_id of this RemoveRemoteCopyTargetInput.

        SystemId of target replication partner  # noqa: E501

        :param replication_partner_system_id: The replication_partner_system_id of this RemoveRemoteCopyTargetInput.  # noqa: E501
        :type: str
        """

        self._replication_partner_system_id = replication_partner_system_id

    @property
    def src_replication_id(self):
        """Gets the src_replication_id of this RemoveRemoteCopyTargetInput.  # noqa: E501

        Id of source replication partner  # noqa: E501

        :return: The src_replication_id of this RemoveRemoteCopyTargetInput.  # noqa: E501
        :rtype: str
        """
        return self._src_replication_id

    @src_replication_id.setter
    def src_replication_id(self, src_replication_id):
        """Sets the src_replication_id of this RemoveRemoteCopyTargetInput.

        Id of source replication partner  # noqa: E501

        :param src_replication_id: The src_replication_id of this RemoveRemoteCopyTargetInput.  # noqa: E501
        :type: str
        """
        if src_replication_id is None:
            raise ValueError("Invalid value for `src_replication_id`, must not be `None`")  # noqa: E501

        self._src_replication_id = src_replication_id

    @property
    def target_replication_id(self):
        """Gets the target_replication_id of this RemoveRemoteCopyTargetInput.  # noqa: E501

        Id of target replication partner  # noqa: E501

        :return: The target_replication_id of this RemoveRemoteCopyTargetInput.  # noqa: E501
        :rtype: str
        """
        return self._target_replication_id

    @target_replication_id.setter
    def target_replication_id(self, target_replication_id):
        """Sets the target_replication_id of this RemoveRemoteCopyTargetInput.

        Id of target replication partner  # noqa: E501

        :param target_replication_id: The target_replication_id of this RemoveRemoteCopyTargetInput.  # noqa: E501
        :type: str
        """

        self._target_replication_id = target_replication_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RemoveRemoteCopyTargetInput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
