# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class HostProximityValue(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'group_name': 'str',
        'group_uid': 'str',
        'host_id': 'str',
        'host_name': 'str',
        'proximity_system_name': 'str',
        'system_name': 'str',
        'system_uid': 'str',
        'target_name': 'str',
        'target_system_id': 'str'
    }

    attribute_map = {
        'group_name': 'groupName',
        'group_uid': 'groupUid',
        'host_id': 'hostId',
        'host_name': 'hostName',
        'proximity_system_name': 'proximitySystemName',
        'system_name': 'systemName',
        'system_uid': 'systemUid',
        'target_name': 'targetName',
        'target_system_id': 'targetSystemId'
    }

    def __init__(self, group_name=None, group_uid=None, host_id=None, host_name=None, proximity_system_name=None, system_name=None, system_uid=None, target_name=None, target_system_id=None):  # noqa: E501
        """HostProximityValue - a model defined in OpenAPI"""  # noqa: E501

        self._group_name = None
        self._group_uid = None
        self._host_id = None
        self._host_name = None
        self._proximity_system_name = None
        self._system_name = None
        self._system_uid = None
        self._target_name = None
        self._target_system_id = None
        self.discriminator = None

        if group_name is not None:
            self.group_name = group_name
        if group_uid is not None:
            self.group_uid = group_uid
        if host_id is not None:
            self.host_id = host_id
        if host_name is not None:
            self.host_name = host_name
        if proximity_system_name is not None:
            self.proximity_system_name = proximity_system_name
        if system_name is not None:
            self.system_name = system_name
        if system_uid is not None:
            self.system_uid = system_uid
        if target_name is not None:
            self.target_name = target_name
        if target_system_id is not None:
            self.target_system_id = target_system_id

    @property
    def group_name(self):
        """Gets the group_name of this HostProximityValue.  # noqa: E501

        Replication Group Name  # noqa: E501

        :return: The group_name of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name):
        """Sets the group_name of this HostProximityValue.

        Replication Group Name  # noqa: E501

        :param group_name: The group_name of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._group_name = group_name

    @property
    def group_uid(self):
        """Gets the group_uid of this HostProximityValue.  # noqa: E501

        Replication Group ID  # noqa: E501

        :return: The group_uid of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._group_uid

    @group_uid.setter
    def group_uid(self, group_uid):
        """Sets the group_uid of this HostProximityValue.

        Replication Group ID  # noqa: E501

        :param group_uid: The group_uid of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._group_uid = group_uid

    @property
    def host_id(self):
        """Gets the host_id of this HostProximityValue.  # noqa: E501

        Host ID  # noqa: E501

        :return: The host_id of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id):
        """Sets the host_id of this HostProximityValue.

        Host ID  # noqa: E501

        :param host_id: The host_id of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._host_id = host_id

    @property
    def host_name(self):
        """Gets the host_name of this HostProximityValue.  # noqa: E501

        Host name  # noqa: E501

        :return: The host_name of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._host_name

    @host_name.setter
    def host_name(self, host_name):
        """Sets the host_name of this HostProximityValue.

        Host name  # noqa: E501

        :param host_name: The host_name of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._host_name = host_name

    @property
    def proximity_system_name(self):
        """Gets the proximity_system_name of this HostProximityValue.  # noqa: E501

        Host proximity value  # noqa: E501

        :return: The proximity_system_name of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._proximity_system_name

    @proximity_system_name.setter
    def proximity_system_name(self, proximity_system_name):
        """Sets the proximity_system_name of this HostProximityValue.

        Host proximity value  # noqa: E501

        :param proximity_system_name: The proximity_system_name of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._proximity_system_name = proximity_system_name

    @property
    def system_name(self):
        """Gets the system_name of this HostProximityValue.  # noqa: E501

        Source system name  # noqa: E501

        :return: The system_name of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._system_name

    @system_name.setter
    def system_name(self, system_name):
        """Sets the system_name of this HostProximityValue.

        Source system name  # noqa: E501

        :param system_name: The system_name of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._system_name = system_name

    @property
    def system_uid(self):
        """Gets the system_uid of this HostProximityValue.  # noqa: E501

        Source system serial number  # noqa: E501

        :return: The system_uid of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._system_uid

    @system_uid.setter
    def system_uid(self, system_uid):
        """Sets the system_uid of this HostProximityValue.

        Source system serial number  # noqa: E501

        :param system_uid: The system_uid of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._system_uid = system_uid

    @property
    def target_name(self):
        """Gets the target_name of this HostProximityValue.  # noqa: E501

        Target system name  # noqa: E501

        :return: The target_name of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._target_name

    @target_name.setter
    def target_name(self, target_name):
        """Sets the target_name of this HostProximityValue.

        Target system name  # noqa: E501

        :param target_name: The target_name of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._target_name = target_name

    @property
    def target_system_id(self):
        """Gets the target_system_id of this HostProximityValue.  # noqa: E501

        Target system serial number  # noqa: E501

        :return: The target_system_id of this HostProximityValue.  # noqa: E501
        :rtype: str
        """
        return self._target_system_id

    @target_system_id.setter
    def target_system_id(self, target_system_id):
        """Sets the target_system_id of this HostProximityValue.

        Target system serial number  # noqa: E501

        :param target_system_id: The target_system_id of this HostProximityValue.  # noqa: E501
        :type: str
        """

        self._target_system_id = target_system_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HostProximityValue):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
