# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PortIP(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'autoneg': 'bool',
        'duplex': 'str',
        'gateway_address': 'str',
        'gateway_address_v6': 'str',
        'ip_address': 'str',
        'ip_address_v6': 'str',
        'mac_address': 'str',
        'mtu': 'str',
        'subnet_mask': 'str',
        'subnet_mask_v6': 'str'
    }

    attribute_map = {
        'autoneg': 'autoneg',
        'duplex': 'duplex',
        'gateway_address': 'gatewayAddress',
        'gateway_address_v6': 'gatewayAddressV6',
        'ip_address': 'ipAddress',
        'ip_address_v6': 'ipAddressV6',
        'mac_address': 'macAddress',
        'mtu': 'mtu',
        'subnet_mask': 'subnetMask',
        'subnet_mask_v6': 'subnetMaskV6'
    }

    def __init__(self, autoneg=None, duplex=None, gateway_address=None, gateway_address_v6=None, ip_address=None, ip_address_v6=None, mac_address=None, mtu=None, subnet_mask=None, subnet_mask_v6=None):  # noqa: E501
        """PortIP - a model defined in OpenAPI"""  # noqa: E501

        self._autoneg = None
        self._duplex = None
        self._gateway_address = None
        self._gateway_address_v6 = None
        self._ip_address = None
        self._ip_address_v6 = None
        self._mac_address = None
        self._mtu = None
        self._subnet_mask = None
        self._subnet_mask_v6 = None
        self.discriminator = None

        if autoneg is not None:
            self.autoneg = autoneg
        if duplex is not None:
            self.duplex = duplex
        if gateway_address is not None:
            self.gateway_address = gateway_address
        if gateway_address_v6 is not None:
            self.gateway_address_v6 = gateway_address_v6
        if ip_address is not None:
            self.ip_address = ip_address
        if ip_address_v6 is not None:
            self.ip_address_v6 = ip_address_v6
        if mac_address is not None:
            self.mac_address = mac_address
        if mtu is not None:
            self.mtu = mtu
        if subnet_mask is not None:
            self.subnet_mask = subnet_mask
        if subnet_mask_v6 is not None:
            self.subnet_mask_v6 = subnet_mask_v6

    @property
    def autoneg(self):
        """Gets the autoneg of this PortIP.  # noqa: E501

        Auto negotiation state of IP port  # noqa: E501

        :return: The autoneg of this PortIP.  # noqa: E501
        :rtype: bool
        """
        return self._autoneg

    @autoneg.setter
    def autoneg(self, autoneg):
        """Sets the autoneg of this PortIP.

        Auto negotiation state of IP port  # noqa: E501

        :param autoneg: The autoneg of this PortIP.  # noqa: E501
        :type: bool
        """

        self._autoneg = autoneg

    @property
    def duplex(self):
        """Gets the duplex of this PortIP.  # noqa: E501

        Duplex state of IP port  # noqa: E501

        :return: The duplex of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._duplex

    @duplex.setter
    def duplex(self, duplex):
        """Sets the duplex of this PortIP.

        Duplex state of IP port  # noqa: E501

        :param duplex: The duplex of this PortIP.  # noqa: E501
        :type: str
        """

        self._duplex = duplex

    @property
    def gateway_address(self):
        """Gets the gateway_address of this PortIP.  # noqa: E501

        Gateway Address of IP port  # noqa: E501

        :return: The gateway_address of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._gateway_address

    @gateway_address.setter
    def gateway_address(self, gateway_address):
        """Sets the gateway_address of this PortIP.

        Gateway Address of IP port  # noqa: E501

        :param gateway_address: The gateway_address of this PortIP.  # noqa: E501
        :type: str
        """

        self._gateway_address = gateway_address

    @property
    def gateway_address_v6(self):
        """Gets the gateway_address_v6 of this PortIP.  # noqa: E501

        Gateway Address of IP port  # noqa: E501

        :return: The gateway_address_v6 of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._gateway_address_v6

    @gateway_address_v6.setter
    def gateway_address_v6(self, gateway_address_v6):
        """Sets the gateway_address_v6 of this PortIP.

        Gateway Address of IP port  # noqa: E501

        :param gateway_address_v6: The gateway_address_v6 of this PortIP.  # noqa: E501
        :type: str
        """

        self._gateway_address_v6 = gateway_address_v6

    @property
    def ip_address(self):
        """Gets the ip_address of this PortIP.  # noqa: E501

        IP address of IP port  # noqa: E501

        :return: The ip_address of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this PortIP.

        IP address of IP port  # noqa: E501

        :param ip_address: The ip_address of this PortIP.  # noqa: E501
        :type: str
        """

        self._ip_address = ip_address

    @property
    def ip_address_v6(self):
        """Gets the ip_address_v6 of this PortIP.  # noqa: E501

        IP address of IP port  # noqa: E501

        :return: The ip_address_v6 of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._ip_address_v6

    @ip_address_v6.setter
    def ip_address_v6(self, ip_address_v6):
        """Sets the ip_address_v6 of this PortIP.

        IP address of IP port  # noqa: E501

        :param ip_address_v6: The ip_address_v6 of this PortIP.  # noqa: E501
        :type: str
        """

        self._ip_address_v6 = ip_address_v6

    @property
    def mac_address(self):
        """Gets the mac_address of this PortIP.  # noqa: E501

        IP address of IP port  # noqa: E501

        :return: The mac_address of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._mac_address

    @mac_address.setter
    def mac_address(self, mac_address):
        """Sets the mac_address of this PortIP.

        IP address of IP port  # noqa: E501

        :param mac_address: The mac_address of this PortIP.  # noqa: E501
        :type: str
        """

        self._mac_address = mac_address

    @property
    def mtu(self):
        """Gets the mtu of this PortIP.  # noqa: E501

        Maximum transmission unit (MTU) size  # noqa: E501

        :return: The mtu of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._mtu

    @mtu.setter
    def mtu(self, mtu):
        """Sets the mtu of this PortIP.

        Maximum transmission unit (MTU) size  # noqa: E501

        :param mtu: The mtu of this PortIP.  # noqa: E501
        :type: str
        """

        self._mtu = mtu

    @property
    def subnet_mask(self):
        """Gets the subnet_mask of this PortIP.  # noqa: E501

        NetMask of IP port  # noqa: E501

        :return: The subnet_mask of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask

    @subnet_mask.setter
    def subnet_mask(self, subnet_mask):
        """Sets the subnet_mask of this PortIP.

        NetMask of IP port  # noqa: E501

        :param subnet_mask: The subnet_mask of this PortIP.  # noqa: E501
        :type: str
        """

        self._subnet_mask = subnet_mask

    @property
    def subnet_mask_v6(self):
        """Gets the subnet_mask_v6 of this PortIP.  # noqa: E501

        NetMask of IP port  # noqa: E501

        :return: The subnet_mask_v6 of this PortIP.  # noqa: E501
        :rtype: str
        """
        return self._subnet_mask_v6

    @subnet_mask_v6.setter
    def subnet_mask_v6(self, subnet_mask_v6):
        """Sets the subnet_mask_v6 of this PortIP.

        NetMask of IP port  # noqa: E501

        :param subnet_mask_v6: The subnet_mask_v6 of this PortIP.  # noqa: E501
        :type: str
        """

        self._subnet_mask_v6 = subnet_mask_v6

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PortIP):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
