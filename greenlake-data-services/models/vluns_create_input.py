# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class VlunsCreateInput(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'auto_lun': 'bool',
        'host_group_ids': 'list[str]',
        'max_auto_lun': 'int',
        'no_vcn': 'bool',
        'override': 'bool',
        'position': 'str',
        'proximity': 'str'
    }

    attribute_map = {
        'auto_lun': 'autoLun',
        'host_group_ids': 'hostGroupIds',
        'max_auto_lun': 'maxAutoLun',
        'no_vcn': 'noVcn',
        'override': 'override',
        'position': 'position',
        'proximity': 'proximity'
    }

    def __init__(self, auto_lun=None, host_group_ids=None, max_auto_lun=None, no_vcn=None, override=None, position=None, proximity=None):  # noqa: E501
        """VlunsCreateInput - a model defined in OpenAPI"""  # noqa: E501

        self._auto_lun = None
        self._host_group_ids = None
        self._max_auto_lun = None
        self._no_vcn = None
        self._override = None
        self._position = None
        self._proximity = None
        self.discriminator = None

        if auto_lun is not None:
            self.auto_lun = auto_lun
        if host_group_ids is not None:
            self.host_group_ids = host_group_ids
        if max_auto_lun is not None:
            self.max_auto_lun = max_auto_lun
        if no_vcn is not None:
            self.no_vcn = no_vcn
        if override is not None:
            self.override = override
        if position is not None:
            self.position = position
        if proximity is not None:
            self.proximity = proximity

    @property
    def auto_lun(self):
        """Gets the auto_lun of this VlunsCreateInput.  # noqa: E501

        Auto Lun  # noqa: E501

        :return: The auto_lun of this VlunsCreateInput.  # noqa: E501
        :rtype: bool
        """
        return self._auto_lun

    @auto_lun.setter
    def auto_lun(self, auto_lun):
        """Sets the auto_lun of this VlunsCreateInput.

        Auto Lun  # noqa: E501

        :param auto_lun: The auto_lun of this VlunsCreateInput.  # noqa: E501
        :type: bool
        """

        self._auto_lun = auto_lun

    @property
    def host_group_ids(self):
        """Gets the host_group_ids of this VlunsCreateInput.  # noqa: E501

        HostGroups  # noqa: E501

        :return: The host_group_ids of this VlunsCreateInput.  # noqa: E501
        :rtype: list[str]
        """
        return self._host_group_ids

    @host_group_ids.setter
    def host_group_ids(self, host_group_ids):
        """Sets the host_group_ids of this VlunsCreateInput.

        HostGroups  # noqa: E501

        :param host_group_ids: The host_group_ids of this VlunsCreateInput.  # noqa: E501
        :type: list[str]
        """

        self._host_group_ids = host_group_ids

    @property
    def max_auto_lun(self):
        """Gets the max_auto_lun of this VlunsCreateInput.  # noqa: E501

        Number of volumes.  # noqa: E501

        :return: The max_auto_lun of this VlunsCreateInput.  # noqa: E501
        :rtype: int
        """
        return self._max_auto_lun

    @max_auto_lun.setter
    def max_auto_lun(self, max_auto_lun):
        """Sets the max_auto_lun of this VlunsCreateInput.

        Number of volumes.  # noqa: E501

        :param max_auto_lun: The max_auto_lun of this VlunsCreateInput.  # noqa: E501
        :type: int
        """

        self._max_auto_lun = max_auto_lun

    @property
    def no_vcn(self):
        """Gets the no_vcn of this VlunsCreateInput.  # noqa: E501

        No VCN  # noqa: E501

        :return: The no_vcn of this VlunsCreateInput.  # noqa: E501
        :rtype: bool
        """
        return self._no_vcn

    @no_vcn.setter
    def no_vcn(self, no_vcn):
        """Sets the no_vcn of this VlunsCreateInput.

        No VCN  # noqa: E501

        :param no_vcn: The no_vcn of this VlunsCreateInput.  # noqa: E501
        :type: bool
        """

        self._no_vcn = no_vcn

    @property
    def override(self):
        """Gets the override of this VlunsCreateInput.  # noqa: E501

        Override  # noqa: E501

        :return: The override of this VlunsCreateInput.  # noqa: E501
        :rtype: bool
        """
        return self._override

    @override.setter
    def override(self, override):
        """Sets the override of this VlunsCreateInput.

        Override  # noqa: E501

        :param override: The override of this VlunsCreateInput.  # noqa: E501
        :type: bool
        """

        self._override = override

    @property
    def position(self):
        """Gets the position of this VlunsCreateInput.  # noqa: E501

        Position  # noqa: E501

        :return: The position of this VlunsCreateInput.  # noqa: E501
        :rtype: str
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this VlunsCreateInput.

        Position  # noqa: E501

        :param position: The position of this VlunsCreateInput.  # noqa: E501
        :type: str
        """

        self._position = position

    @property
    def proximity(self):
        """Gets the proximity of this VlunsCreateInput.  # noqa: E501

        Host proximity setting for Active Peer Persistence configuration. Supported values are - PRIMARY, SECONDARY and ALL  # noqa: E501

        :return: The proximity of this VlunsCreateInput.  # noqa: E501
        :rtype: str
        """
        return self._proximity

    @proximity.setter
    def proximity(self, proximity):
        """Sets the proximity of this VlunsCreateInput.

        Host proximity setting for Active Peer Persistence configuration. Supported values are - PRIMARY, SECONDARY and ALL  # noqa: E501

        :param proximity: The proximity of this VlunsCreateInput.  # noqa: E501
        :type: str
        """
        allowed_values = ["PRIMARY", "SECONDARY", "ALL"]  # noqa: E501
        if proximity not in allowed_values:
            raise ValueError(
                "Invalid value for `proximity` ({0}), must be one of {1}"  # noqa: E501
                .format(proximity, allowed_values)
            )

        self._proximity = proximity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VlunsCreateInput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
