# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class HostProximityDetail(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'is_remote_array_support_replication': 'bool',
        'is_source_array_support_replication': 'bool',
        'local_system': 'str',
        'proximity_value': 'str',
        'remote_system': 'str'
    }

    attribute_map = {
        'is_remote_array_support_replication': 'isRemoteArraySupportReplication',
        'is_source_array_support_replication': 'isSourceArraySupportReplication',
        'local_system': 'localSystem',
        'proximity_value': 'proximityValue',
        'remote_system': 'remoteSystem'
    }

    def __init__(self, is_remote_array_support_replication=None, is_source_array_support_replication=None, local_system=None, proximity_value=None, remote_system=None):  # noqa: E501
        """HostProximityDetail - a model defined in OpenAPI"""  # noqa: E501

        self._is_remote_array_support_replication = None
        self._is_source_array_support_replication = None
        self._local_system = None
        self._proximity_value = None
        self._remote_system = None
        self.discriminator = None

        if is_remote_array_support_replication is not None:
            self.is_remote_array_support_replication = is_remote_array_support_replication
        if is_source_array_support_replication is not None:
            self.is_source_array_support_replication = is_source_array_support_replication
        if local_system is not None:
            self.local_system = local_system
        if proximity_value is not None:
            self.proximity_value = proximity_value
        if remote_system is not None:
            self.remote_system = remote_system

    @property
    def is_remote_array_support_replication(self):
        """Gets the is_remote_array_support_replication of this HostProximityDetail.  # noqa: E501

        Boolean value to indicate if remote array OS version supports replication  # noqa: E501

        :return: The is_remote_array_support_replication of this HostProximityDetail.  # noqa: E501
        :rtype: bool
        """
        return self._is_remote_array_support_replication

    @is_remote_array_support_replication.setter
    def is_remote_array_support_replication(self, is_remote_array_support_replication):
        """Sets the is_remote_array_support_replication of this HostProximityDetail.

        Boolean value to indicate if remote array OS version supports replication  # noqa: E501

        :param is_remote_array_support_replication: The is_remote_array_support_replication of this HostProximityDetail.  # noqa: E501
        :type: bool
        """

        self._is_remote_array_support_replication = is_remote_array_support_replication

    @property
    def is_source_array_support_replication(self):
        """Gets the is_source_array_support_replication of this HostProximityDetail.  # noqa: E501

        Boolean value to indicate if source array OS version supports replication  # noqa: E501

        :return: The is_source_array_support_replication of this HostProximityDetail.  # noqa: E501
        :rtype: bool
        """
        return self._is_source_array_support_replication

    @is_source_array_support_replication.setter
    def is_source_array_support_replication(self, is_source_array_support_replication):
        """Sets the is_source_array_support_replication of this HostProximityDetail.

        Boolean value to indicate if source array OS version supports replication  # noqa: E501

        :param is_source_array_support_replication: The is_source_array_support_replication of this HostProximityDetail.  # noqa: E501
        :type: bool
        """

        self._is_source_array_support_replication = is_source_array_support_replication

    @property
    def local_system(self):
        """Gets the local_system of this HostProximityDetail.  # noqa: E501

        Local system where host I/O path is Active optimized  # noqa: E501

        :return: The local_system of this HostProximityDetail.  # noqa: E501
        :rtype: str
        """
        return self._local_system

    @local_system.setter
    def local_system(self, local_system):
        """Sets the local_system of this HostProximityDetail.

        Local system where host I/O path is Active optimized  # noqa: E501

        :param local_system: The local_system of this HostProximityDetail.  # noqa: E501
        :type: str
        """

        self._local_system = local_system

    @property
    def proximity_value(self):
        """Gets the proximity_value of this HostProximityDetail.  # noqa: E501

        Host proximity to determine the Asymmetric Logical path access state  # noqa: E501

        :return: The proximity_value of this HostProximityDetail.  # noqa: E501
        :rtype: str
        """
        return self._proximity_value

    @proximity_value.setter
    def proximity_value(self, proximity_value):
        """Sets the proximity_value of this HostProximityDetail.

        Host proximity to determine the Asymmetric Logical path access state  # noqa: E501

        :param proximity_value: The proximity_value of this HostProximityDetail.  # noqa: E501
        :type: str
        """

        self._proximity_value = proximity_value

    @property
    def remote_system(self):
        """Gets the remote_system of this HostProximityDetail.  # noqa: E501

        Remote system where host I/O path is Active Non-optimized  # noqa: E501

        :return: The remote_system of this HostProximityDetail.  # noqa: E501
        :rtype: str
        """
        return self._remote_system

    @remote_system.setter
    def remote_system(self, remote_system):
        """Sets the remote_system of this HostProximityDetail.

        Remote system where host I/O path is Active Non-optimized  # noqa: E501

        :param remote_system: The remote_system of this HostProximityDetail.  # noqa: E501
        :type: str
        """

        self._remote_system = remote_system

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HostProximityDetail):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
