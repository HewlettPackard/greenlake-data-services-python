# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class NimbleFCInitiatorInfo(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'initiator_alias': 'str',
        'initiator_fcid': 'str',
        'initiator_switch_name': 'str',
        'initiator_switch_port': 'str',
        'initiator_symbolic_nodename': 'str',
        'initiator_symbolic_portname': 'str',
        'initiator_wwpn': 'str'
    }

    attribute_map = {
        'initiator_alias': 'initiator_alias',
        'initiator_fcid': 'initiator_fcid',
        'initiator_switch_name': 'initiator_switch_name',
        'initiator_switch_port': 'initiator_switch_port',
        'initiator_symbolic_nodename': 'initiator_symbolic_nodename',
        'initiator_symbolic_portname': 'initiator_symbolic_portname',
        'initiator_wwpn': 'initiator_wwpn'
    }

    def __init__(self, initiator_alias=None, initiator_fcid=None, initiator_switch_name=None, initiator_switch_port=None, initiator_symbolic_nodename=None, initiator_symbolic_portname=None, initiator_wwpn=None):  # noqa: E501
        """NimbleFCInitiatorInfo - a model defined in OpenAPI"""  # noqa: E501

        self._initiator_alias = None
        self._initiator_fcid = None
        self._initiator_switch_name = None
        self._initiator_switch_port = None
        self._initiator_symbolic_nodename = None
        self._initiator_symbolic_portname = None
        self._initiator_wwpn = None
        self.discriminator = None

        if initiator_alias is not None:
            self.initiator_alias = initiator_alias
        if initiator_fcid is not None:
            self.initiator_fcid = initiator_fcid
        if initiator_switch_name is not None:
            self.initiator_switch_name = initiator_switch_name
        if initiator_switch_port is not None:
            self.initiator_switch_port = initiator_switch_port
        if initiator_symbolic_nodename is not None:
            self.initiator_symbolic_nodename = initiator_symbolic_nodename
        if initiator_symbolic_portname is not None:
            self.initiator_symbolic_portname = initiator_symbolic_portname
        if initiator_wwpn is not None:
            self.initiator_wwpn = initiator_wwpn

    @property
    def initiator_alias(self):
        """Gets the initiator_alias of this NimbleFCInitiatorInfo.  # noqa: E501

        Alias of the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_alias of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_alias

    @initiator_alias.setter
    def initiator_alias(self, initiator_alias):
        """Sets the initiator_alias of this NimbleFCInitiatorInfo.

        Alias of the Fibre Channel initiator.  # noqa: E501

        :param initiator_alias: The initiator_alias of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_alias = initiator_alias

    @property
    def initiator_fcid(self):
        """Gets the initiator_fcid of this NimbleFCInitiatorInfo.  # noqa: E501

        FCID assigned to the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_fcid of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_fcid

    @initiator_fcid.setter
    def initiator_fcid(self, initiator_fcid):
        """Sets the initiator_fcid of this NimbleFCInitiatorInfo.

        FCID assigned to the Fibre Channel initiator.  # noqa: E501

        :param initiator_fcid: The initiator_fcid of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_fcid = initiator_fcid

    @property
    def initiator_switch_name(self):
        """Gets the initiator_switch_name of this NimbleFCInitiatorInfo.  # noqa: E501

        Name of the switch used by the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_switch_name of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_switch_name

    @initiator_switch_name.setter
    def initiator_switch_name(self, initiator_switch_name):
        """Sets the initiator_switch_name of this NimbleFCInitiatorInfo.

        Name of the switch used by the Fibre Channel initiator.  # noqa: E501

        :param initiator_switch_name: The initiator_switch_name of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_switch_name = initiator_switch_name

    @property
    def initiator_switch_port(self):
        """Gets the initiator_switch_port of this NimbleFCInitiatorInfo.  # noqa: E501

        Port on the switch used by the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_switch_port of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_switch_port

    @initiator_switch_port.setter
    def initiator_switch_port(self, initiator_switch_port):
        """Sets the initiator_switch_port of this NimbleFCInitiatorInfo.

        Port on the switch used by the Fibre Channel initiator.  # noqa: E501

        :param initiator_switch_port: The initiator_switch_port of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_switch_port = initiator_switch_port

    @property
    def initiator_symbolic_nodename(self):
        """Gets the initiator_symbolic_nodename of this NimbleFCInitiatorInfo.  # noqa: E501

        Symbolic node name associated with the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_symbolic_nodename of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_symbolic_nodename

    @initiator_symbolic_nodename.setter
    def initiator_symbolic_nodename(self, initiator_symbolic_nodename):
        """Sets the initiator_symbolic_nodename of this NimbleFCInitiatorInfo.

        Symbolic node name associated with the Fibre Channel initiator.  # noqa: E501

        :param initiator_symbolic_nodename: The initiator_symbolic_nodename of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_symbolic_nodename = initiator_symbolic_nodename

    @property
    def initiator_symbolic_portname(self):
        """Gets the initiator_symbolic_portname of this NimbleFCInitiatorInfo.  # noqa: E501

        Symbolic port name associated with the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_symbolic_portname of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_symbolic_portname

    @initiator_symbolic_portname.setter
    def initiator_symbolic_portname(self, initiator_symbolic_portname):
        """Sets the initiator_symbolic_portname of this NimbleFCInitiatorInfo.

        Symbolic port name associated with the Fibre Channel initiator.  # noqa: E501

        :param initiator_symbolic_portname: The initiator_symbolic_portname of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_symbolic_portname = initiator_symbolic_portname

    @property
    def initiator_wwpn(self):
        """Gets the initiator_wwpn of this NimbleFCInitiatorInfo.  # noqa: E501

        WWPN (World Wide Port Name) of the Fibre Channel initiator.  # noqa: E501

        :return: The initiator_wwpn of this NimbleFCInitiatorInfo.  # noqa: E501
        :rtype: str
        """
        return self._initiator_wwpn

    @initiator_wwpn.setter
    def initiator_wwpn(self, initiator_wwpn):
        """Sets the initiator_wwpn of this NimbleFCInitiatorInfo.

        WWPN (World Wide Port Name) of the Fibre Channel initiator.  # noqa: E501

        :param initiator_wwpn: The initiator_wwpn of this NimbleFCInitiatorInfo.  # noqa: E501
        :type: str
        """

        self._initiator_wwpn = initiator_wwpn

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, NimbleFCInitiatorInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
