# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class PrimeraApplicationSetCapacityStats(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'associated_links': 'list[AssociatedLinksInner]',
        'capacity_summary': 'PrimeraApplicationSetCapacityStatsCapacitySummary',
        'customer_id': 'str',
        'id': 'str',
        'members': 'list[str]',
        'name': 'str',
        'request_uri': 'str',
        'system_id': 'str'
    }

    attribute_map = {
        'associated_links': 'associatedLinks',
        'capacity_summary': 'capacitySummary',
        'customer_id': 'customerId',
        'id': 'id',
        'members': 'members',
        'name': 'name',
        'request_uri': 'requestUri',
        'system_id': 'systemId'
    }

    def __init__(self, associated_links=None, capacity_summary=None, customer_id=None, id=None, members=None, name=None, request_uri=None, system_id=None):  # noqa: E501
        """PrimeraApplicationSetCapacityStats - a model defined in OpenAPI"""  # noqa: E501

        self._associated_links = None
        self._capacity_summary = None
        self._customer_id = None
        self._id = None
        self._members = None
        self._name = None
        self._request_uri = None
        self._system_id = None
        self.discriminator = None

        if associated_links is not None:
            self.associated_links = associated_links
        if capacity_summary is not None:
            self.capacity_summary = capacity_summary
        if customer_id is not None:
            self.customer_id = customer_id
        if id is not None:
            self.id = id
        if members is not None:
            self.members = members
        if name is not None:
            self.name = name
        if request_uri is not None:
            self.request_uri = request_uri
        if system_id is not None:
            self.system_id = system_id

    @property
    def associated_links(self):
        """Gets the associated_links of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        Associated Links Details  # noqa: E501

        :return: The associated_links of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: list[AssociatedLinksInner]
        """
        return self._associated_links

    @associated_links.setter
    def associated_links(self, associated_links):
        """Sets the associated_links of this PrimeraApplicationSetCapacityStats.

        Associated Links Details  # noqa: E501

        :param associated_links: The associated_links of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: list[AssociatedLinksInner]
        """

        self._associated_links = associated_links

    @property
    def capacity_summary(self):
        """Gets the capacity_summary of this PrimeraApplicationSetCapacityStats.  # noqa: E501


        :return: The capacity_summary of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: PrimeraApplicationSetCapacityStatsCapacitySummary
        """
        return self._capacity_summary

    @capacity_summary.setter
    def capacity_summary(self, capacity_summary):
        """Sets the capacity_summary of this PrimeraApplicationSetCapacityStats.


        :param capacity_summary: The capacity_summary of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: PrimeraApplicationSetCapacityStatsCapacitySummary
        """

        self._capacity_summary = capacity_summary

    @property
    def customer_id(self):
        """Gets the customer_id of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        The customer application identifier  # noqa: E501

        :return: The customer_id of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: str
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this PrimeraApplicationSetCapacityStats.

        The customer application identifier  # noqa: E501

        :param customer_id: The customer_id of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: str
        """

        self._customer_id = customer_id

    @property
    def id(self):
        """Gets the id of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        Uid of the applicationset  # noqa: E501

        :return: The id of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PrimeraApplicationSetCapacityStats.

        Uid of the applicationset  # noqa: E501

        :param id: The id of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def members(self):
        """Gets the members of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        Volume Names  # noqa: E501

        :return: The members of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: list[str]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this PrimeraApplicationSetCapacityStats.

        Volume Names  # noqa: E501

        :param members: The members of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: list[str]
        """

        self._members = members

    @property
    def name(self):
        """Gets the name of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        Name of the application set  # noqa: E501

        :return: The name of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PrimeraApplicationSetCapacityStats.

        Name of the application set  # noqa: E501

        :param name: The name of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: str
        """
        if name is not None and len(name) > 255:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `255`")  # noqa: E501

        self._name = name

    @property
    def request_uri(self):
        """Gets the request_uri of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        RequestUri for applicationsets resources  # noqa: E501

        :return: The request_uri of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: str
        """
        return self._request_uri

    @request_uri.setter
    def request_uri(self, request_uri):
        """Sets the request_uri of this PrimeraApplicationSetCapacityStats.

        RequestUri for applicationsets resources  # noqa: E501

        :param request_uri: The request_uri of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: str
        """

        self._request_uri = request_uri

    @property
    def system_id(self):
        """Gets the system_id of this PrimeraApplicationSetCapacityStats.  # noqa: E501

        SystemId/serialNumber of the array.  # noqa: E501

        :return: The system_id of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :rtype: str
        """
        return self._system_id

    @system_id.setter
    def system_id(self, system_id):
        """Sets the system_id of this PrimeraApplicationSetCapacityStats.

        SystemId/serialNumber of the array.  # noqa: E501

        :param system_id: The system_id of this PrimeraApplicationSetCapacityStats.  # noqa: E501
        :type: str
        """

        self._system_id = system_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, PrimeraApplicationSetCapacityStats):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
