# coding: utf-8

"""
    Data Services Cloud Console API

    Data Services Cloud Console API  # noqa: E501

    OpenAPI spec version: 1.2.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class SnapshotTdvvsize(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'ddc_size_mi_b': 'float',
        'dds_size_mi_b': 'float',
        'virtual_size_mi_b': 'float',
        'written_size_mi_b': 'float'
    }

    attribute_map = {
        'ddc_size_mi_b': 'ddcSizeMiB',
        'dds_size_mi_b': 'ddsSizeMiB',
        'virtual_size_mi_b': 'virtualSizeMiB',
        'written_size_mi_b': 'writtenSizeMiB'
    }

    def __init__(self, ddc_size_mi_b=None, dds_size_mi_b=None, virtual_size_mi_b=None, written_size_mi_b=None):  # noqa: E501
        """SnapshotTdvvsize - a model defined in OpenAPI"""  # noqa: E501

        self._ddc_size_mi_b = None
        self._dds_size_mi_b = None
        self._virtual_size_mi_b = None
        self._written_size_mi_b = None
        self.discriminator = None

        if ddc_size_mi_b is not None:
            self.ddc_size_mi_b = ddc_size_mi_b
        if dds_size_mi_b is not None:
            self.dds_size_mi_b = dds_size_mi_b
        if virtual_size_mi_b is not None:
            self.virtual_size_mi_b = virtual_size_mi_b
        if written_size_mi_b is not None:
            self.written_size_mi_b = written_size_mi_b

    @property
    def ddc_size_mi_b(self):
        """Gets the ddc_size_mi_b of this SnapshotTdvvsize.  # noqa: E501

        Note, will be updated at most once in an hour  # noqa: E501

        :return: The ddc_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :rtype: float
        """
        return self._ddc_size_mi_b

    @ddc_size_mi_b.setter
    def ddc_size_mi_b(self, ddc_size_mi_b):
        """Sets the ddc_size_mi_b of this SnapshotTdvvsize.

        Note, will be updated at most once in an hour  # noqa: E501

        :param ddc_size_mi_b: The ddc_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :type: float
        """

        self._ddc_size_mi_b = ddc_size_mi_b

    @property
    def dds_size_mi_b(self):
        """Gets the dds_size_mi_b of this SnapshotTdvvsize.  # noqa: E501


        :return: The dds_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :rtype: float
        """
        return self._dds_size_mi_b

    @dds_size_mi_b.setter
    def dds_size_mi_b(self, dds_size_mi_b):
        """Sets the dds_size_mi_b of this SnapshotTdvvsize.


        :param dds_size_mi_b: The dds_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :type: float
        """

        self._dds_size_mi_b = dds_size_mi_b

    @property
    def virtual_size_mi_b(self):
        """Gets the virtual_size_mi_b of this SnapshotTdvvsize.  # noqa: E501


        :return: The virtual_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :rtype: float
        """
        return self._virtual_size_mi_b

    @virtual_size_mi_b.setter
    def virtual_size_mi_b(self, virtual_size_mi_b):
        """Sets the virtual_size_mi_b of this SnapshotTdvvsize.


        :param virtual_size_mi_b: The virtual_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :type: float
        """

        self._virtual_size_mi_b = virtual_size_mi_b

    @property
    def written_size_mi_b(self):
        """Gets the written_size_mi_b of this SnapshotTdvvsize.  # noqa: E501


        :return: The written_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :rtype: float
        """
        return self._written_size_mi_b

    @written_size_mi_b.setter
    def written_size_mi_b(self, written_size_mi_b):
        """Sets the written_size_mi_b of this SnapshotTdvvsize.


        :param written_size_mi_b: The written_size_mi_b of this SnapshotTdvvsize.  # noqa: E501
        :type: float
        """

        self._written_size_mi_b = written_size_mi_b

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SnapshotTdvvsize):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
